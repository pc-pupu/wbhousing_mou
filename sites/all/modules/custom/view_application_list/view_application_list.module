<?php
 function view_application_list_menu() {

	$items['view_application_list/%/%'] = array(
	  'title' => 'View Application List',	
      'page callback' => 'app_page',
	  'page arguments' => array(1,2),
	  'access arguments' => array('administer View Application List'),
    );

	
	//$items['view_application/%/%'] = array(
	$items['view_application/%/%/%'] = array(
	  'title' => 'View Application',	
      'page callback' => 'view_app_page',
	  'page arguments' => array(1,2,3),
	  'file' => 'view_application_list_page.inc',
	  'access arguments' => array('administer View Application List'),
    );
	$items['application_detail/%'] = array(
	  'title' => 'View Application Detail',	
      'page callback' => 'view_app_detail_page',
	  'page arguments' => array(1),
	  'access arguments' => array('administer View Application'),
    );

   
	
	
	$items['application_detail_pdf/%/%'] = array(
      'page callback' => 'application_detail_pdf_gen',
	  'page arguments' => array(1,2),
	  'file' => 'application_detail_pdf_gen.inc',
	  'access arguments' => array('administer View Application PDF'),
	  'access callback' => TRUE,
    );
	
	$items['update_status/%/%/%/%'] = array(
	  'title' => 'Update Application',	
      'page callback' => 'update_page',
	  'page arguments' => array(1, 2, 3, 4),
	  'access arguments' => array('administer View Application List'),
	);
	
	

	//applicant application form upload
	//debolina start
	$items['application-approve/%/%/%/%'] = array(
		'title' => 'Approve Application',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('application_form_upload1', 1, 2, 3, 4),
		'file' => 'new_application_approve_form.inc',
		'access arguments' => array('administer approve applicaion'),
	);
	//debolina end

	// menu for ddo

	$items['view_application_list-ddo/'] = array(
	  'title' => 'View Application List',	
      'page callback' => 'app_page',
	  'page arguments' => array(1,2),
	  'access arguments' => array('access content'),
    );
    // menu for hs
	$items['view_application_list-hs/'] = array(
	  'title' => 'View Application List',	
      'page callback' => 'app_page',
	  'page arguments' => array(1,2),
	  'access arguments' => array('access content'),
	);
	// menu for ho
	$items['view_application_list-ho/'] = array(
	  'title' => 'View Application List',	
      'page callback' => 'app_page',
	  'page arguments' => array(1,2),
	  'access arguments' => array('access content'),
	);
    return $items;
  }
  
	function app_page($status='',$url = '',$page_status='') {
		//echo url();die;
		// echo $url;echo decrypt_url($url);

		// echo decrypt_url($status);die;
		//echo $page_status;
		// echo '<br>'; 
		if($url == ''){
			$url = encrypt_url('new-apply');
		}
		// echo $url;
		// echo '<br>';
		// echo $status;
		$status = decrypt_url($status);//echo $status;die;
		$url1 = decrypt_url($url);
		// echo '<br>';
		// echo $url;  die;
		$output = array();
		if($status !== '' && $url !== '' && preg_match("/^[a-zA-Z0-9\-\_]*$/",$status) && preg_match("/^[a-zA-Z0-9\-\_]*$/",$url1)){
			// && preg_match("/^[a-zA-Z0-9\-\_]*$/",$status) && preg_match("/^[a-zA-Z0-9\-\_]*$/",$url1


			// echo 'ok'; die;

			// $output['new-apply'] = fetch_all_application_detail('new-apply',$status)->rowCount();
			$output['vs'] = fetch_all_application_detail('vs',$status)->rowCount();
			$output['cs'] = fetch_all_application_detail('cs',$status)->rowCount();
			$output['new_license'] = fetch_all_application_detail('new_license',$status)->rowCount();
			
			//new code
			$output['vs_licence'] = fetch_all_application_detail('vs_licence',$status)->rowCount();
			$output['cs_licence'] = fetch_all_application_detail('cs_licence',$status)->rowCount();
			//
			
			$output['renew_license'] = fetch_all_application_detail('renew_license',$status)->rowCount();

			// new code added by moumita 24-05-24
			$output['new-apply'] = application_list_fetch('new-apply',$status)->rowCount();


			$output['url'] = $url;
			$output['status'] = $status;

			// new code added by sayantika 28-05-24
			$output['page_status']=$page_status;
		}
		// echo "<pre>";print_r($output);die;
		
		return theme('application_template', array('output' => $output));
	}	
	function view_app_detail_page($app_id = '',$page_status='') {
		global $base_root, $base_path;
		$app_id = decrypt_url($app_id);
		
		if(is_numeric($app_id) && $app_id > 0) {

			//debolina start
			if($page_status=='verified-list'||$page_status=='reject-list'){
				$app_details = fetch_application_detail_verified_reject_list($app_id);
				$application_details_arr = $app_details->fetchObject();
			}else{
				$app_details = fetch_application_detail($app_id);
				$application_details_arr = $app_details->fetchObject();
				$current_application_status_description=fetch_application_status_description($application_details_arr->status);	
			}
			//debolina end

			//$app_details = fetch_application_detail($app_id);
			$output = array();
			
			/*if ($app_id !== '' && (!is_numeric($app_id) || $app_id <= 0)) {
				$output[] = false;
			}else*/ 
			
			if($app_details->rowCount() == 0){
				$output[] = false;
			}else{	
				$output[] = true;
				
				//debolina start
				//$output[] = $app_details->fetchObject();
				$output[] = $application_details_arr;
				//echo "<pre>";print_r($output);die;
				//debolina end

				$output[] = check_application_entity(0,$app_id);
				$output[] = applicant_personal_info_detail($app_id)->fetchObject();

				// print_r($output); die;
				
				$applicant_uid = $output[3]->uid;
				//debolina start
				if(isset($current_application_status_description))
				$output[] = $current_application_status_description;
				//debolina end

				// added by Moumita 03-06-2024

				// get document info
				$fetchDoc = get_applicant_upload_docs($app_id);
				
				if($fetchDoc->rowCount() >0){
					$doc_arr = $fetchDoc->fetchAllKeyed($key_index = 8, $value_index = 7);

					// print_r($doc_arr); die;
					
					$license_application_signed_form_url = $base_root.$base_path.'/sites/default/files/doc/'.$applicant_uid.'/'.$doc_arr['license_application_signed_form'];

					$output['license_application_signed_form_url'] = l('<img height="20" width="20" src="'.$base_path.drupal_get_path('module', 'application_of_registration_list').'/images/download_icon.png " title="Licence Form" alt="PDF Icon">Uploaded Licence Application Signed Form',$license_application_signed_form_url,array('html'=>true,'attributes'=>array('class'=>array())));

					$declaration_signed_form_url = $base_root.$base_path.'/sites/default/files/doc/'.$applicant_uid.'/'.$doc_arr['declaration_signed_form'];

					$output['declaration_signed_form_url'] = l('<img height="20" width="20" src="'.$base_path.drupal_get_path('module', 'application_of_registration_list').'/images/download_icon.png " title="Declaration Form" alt="PDF Icon">Uploaded Declaration Signed Form',$declaration_signed_form_url,array('html'=>true,'attributes'=>array('class'=>array())));

					$current_pay_slip_url = $base_root.$base_path.'/sites/default/files/doc/'.$applicant_uid.'/'.$doc_arr['current_pay_slip'];

					$output['current_pay_slip_url'] = l('<img height="20" width="20" src="'.$base_path.drupal_get_path('module', 'application_of_registration_list').'/images/download_icon.png " title="Download Offer Letter" alt="PDF Icon">Uploaded Current Pay Slip','#',array('html' => true));


				}else{
					$output['license_application_signed_form_url'] = '';
					$output['declaration_signed_form_url'] = '';			
					$output['current_pay_slip_url'] = '';
				}

			}
		}
		// print_r($output);die;
		return theme('view_application_detail_template', array('output' => $output,'page_status'=>$page_status));
	}
function update_page($app_id = 0, $status_new = '', $status = '', $entity = '') {
	$app_id = decrypt_url($app_id);
	$status_new = decrypt_url($status_new);
	//echo $status_new.'/'.$app_id.'/'.$status.'/'.$entity; die;
	
	update_status($app_id, $status_new);
	unset($_SESSION['application_list']);
	unset($_SESSION['new_application_list']);
	unset($_SESSION['verified_application_list']);
	unset($_SESSION['reject_application_list']);
	//drupal_goto('application_detail/'.encrypt_url($app_id));
	drupal_goto('view_application/'.$status.'/'.$entity);

}


/*function get_max_waiting_list() {
	$max_waiting_no = 0;
	$result = db_query("select max(waiting_no) as max_waiting_no from housing_online_application where status = 'verified' and substring(application_no,1,2) = 'NA'");
	$data = $result->fetchObject();
	if(!empty($data->max_waiting_no))
	$max_waiting_no = $data->max_waiting_no;
	
	
	return $max_waiting_no;
	
}*/


function view_application_list_theme() {
	
	return array(
        'view_application_detail_template' => array(
			'variables' => array('output' => NULL),
            // file name will be custom-page.tpl.php
            'template' => 'view_application_detail',
        ),
		'application_template' => array(
			'variables' => array('output' => NULL),
            'template' => 'application',
        ),
		
    );
}

/*update status*/
function update_status($app_id = '', $status = '') {
	global $user;	
	db_update('housing_online_application')
	->fields(array(
		'status' => $status,
		'date_of_verified' => date('Y-m-d'),
		)
	)
	->condition('online_application_id',$app_id, '=')
	->execute();
	
	$query = db_select('housing_allotment_status_master', 'hasm');
	$query->addField('hasm', 'status_id');
	$query->addField('hasm', 'short_code');
	$query->condition('hasm.short_code',$status,'=');
	$result = $query->execute();  
	$data = $result->fetchObject();
		
	$short_code_status = $data->status_id; 
	//echo $short_code_status;die;

						
	$process_flow_arr = array('online_application_id' => $app_id,
							  'status_id' => $short_code_status,
							  'created_at' => date('Y-m-d H:i:s'),
							  'uid' => $user->uid,
							  'short_code' =>$data->short_code
							);
	db_insert('housing_process_flow')->fields($process_flow_arr)->execute();
	drupal_set_message(' Application Rejected successfully.');
}


function fetch_all_application_detail($entity = '',$status = ''){
		global $user;
		$query = db_select('housing_applicant_official_detail', 'haod');
		$query->innerJoin('housing_applicant', 'ha',
		'ha.uid = haod.uid');
		$query->innerJoin('housing_online_application', 'hoa',
		'hoa.applicant_official_detail_id = haod.applicant_official_detail_id');
		$query->innerJoin('housing_ddo', 'hd',
		'hd.ddo_id = haod.ddo_id');
		$query->innerJoin('housing_pay_band', 'hpb',
		'hpb.pay_band_id = haod.pay_band_id');
		$query->leftJoin('file_managed', 'fm_app_form', 'fm_app_form.fid = hoa.uploaded_app_form');
		
		if($entity == 'new-apply'){
			$query->innerJoin('housing_new_allotment_application', 'hna',
			'hna.online_application_id = hoa.online_application_id');
			$query->innerJoin('housing_flat_type', 'hft',
			'hna.flat_type_id = hft.flat_type_id');
			
			$query->leftJoin('file_managed', 'fm',
			'fm.fid = hna.document');
			$query->leftJoin('file_managed', 'fm1',
			'fm1.fid = hna.extra_doc');
			$query->leftJoin('file_managed', 'fm2',
			'fm2.fid = hna.scaned_sign');
		}
		else if($entity == 'vs'){
			$query->innerJoin('housing_vs_application', 'hva',
			'hva.online_application_id = hoa.online_application_id');
			
			$query->leftJoin('file_managed', 'fm_vs',
			'fm_vs.fid = hva.file_licence');
		}
		else if($entity == 'cs'){
			$query->innerJoin('housing_cs_application', 'hca',
			'hca.online_application_id = hoa.online_application_id');
			
			$query->leftJoin('file_managed', 'fm_cs',
			'fm_cs.fid = hca.file_licence');
		}
		else if($entity == 'new_license' || $entity == 'renew_license'){
			$query->innerJoin('housing_license_application', 'hla',
			'hla.online_application_id = hoa.online_application_id');
			
			$query->leftJoin('file_managed', 'fm_licence',
			'fm_licence.fid = hla.document');
		}
		
		//new code
		else if($entity == 'vs_licence' || $entity == 'cs_licence'){
			$query->innerJoin('housing_license_application', 'hla',
			'hla.online_application_id = hoa.online_application_id');
			
			$query->leftJoin('file_managed', 'fm_licence',
			'fm_licence.fid = hla.document');
		}
		//
		
		if($entity == 'new-apply'){
			$query->addField('hft', 'flat_type_id');
		}
		$query->addField('ha', 'applicant_name');
		$query->addField('hoa', 'online_application_id');
		$query->addField('hd', 'district_code');
		$query->addField('hd', 'ddo_designation');
		$query->addField('hd', 'ddo_address');
		$query->addField('haod', 'applicant_designation');
		$query->addField('haod', 'applicant_headquarter');
		$query->addField('haod', 'applicant_posting_place');
		$query->addField('hpb', 'payband');
		$query->addField('hpb', 'scale_from');
		$query->addField('hpb', 'scale_to');
		$query->addField('haod', 'uid');
		$query->addField('haod', 'pay_in_the_pay_band');
		$query->addField('haod', 'grade_pay');
		$query->addField('haod', 'gpf_no');
		$query->addField('haod', 'date_of_joining');
		$query->addField('haod', 'date_of_retirement');
		$query->addField('haod', 'office_name');
		$query->addField('haod', 'office_street');
		$query->addField('haod', 'office_city_town_village');
		$query->addField('haod', 'office_post_office');
		$query->addField('haod', 'office_pin_code');
		$query->addField('haod', 'office_district');
		$query->addField('haod', 'office_phone_no');
		$query->addField('haod', 'hrms_id');
		$query->addField('hoa', 'status');
		$query->addField('hoa', 'application_no');
		$query->addField('hoa', 'date_of_application');
		$query->addField('hoa', 'date_of_verified');
		$query->addField('hoa', 'uploaded_app_form');
		$query->addField('fm_app_form', 'uri', 'uri_app_form');
		
		if($entity == 'new-apply'){
			$query->addField('hna', 'allotment_category');
			$query->addField('hft', 'flat_type');
			$query->addField('fm', 'uri', 'uri_doc');
			$query->addField('fm2', 'uri', 'uri_scaned_sign');
			$query->addField('fm1', 'uri', 'uri_extra_doc');
		}
		else if($entity == 'vs'){
			$query->addField('hva', 'allotment_category');
			$query->addField('fm_vs', 'uri', 'uri_vs');
		}
		else if($entity == 'cs'){
			$query->addField('hca', 'allotment_category');
			$query->addField('fm_cs', 'uri', 'uri_cs');
		}
		else if($entity == 'new_license' || $entity == 'vs_licence' || $entity == 'cs_licence' || $entity == 'renew_license'){
			$query->addField('fm_licence', 'uri', 'uri_licence');
		}
		
		if($entity != 'new_license' && $entity != 'renew_license' && $entity != 'vs_licence' && $entity != 'cs_licence' && 
		$status !=''){
			$db_and = db_and();
			$db_and->condition('hoa.status', $status, '=');
			$db_and->condition('hoa.status', 'allotted', '!=');
			$query->condition($db_and);
		}
		else if($entity == 'new_license' && $status !=''){
			$db_and = db_and();
			$db_and->condition('hoa.status', $status, '=');
			$db_and->condition('hoa.status', 'allotted', '!=');
			$db_and->condition('hla.type_of_application', 'new', '=');
			$query->condition($db_and);
		}
		else if($entity == 'renew_license' && $status !=''){
			$db_and = db_and();
			$db_and->condition('hoa.status', $status, '=');
			$db_and->condition('hoa.status', 'allotted', '!=');
			$db_and->condition('hla.type_of_application', 'renew', '=');
			$query->condition($db_and);
		}
		
		//new code
		/*if($entity != 'vs_licence' && $entity != 'cs_licence' && $status !=''){
			$db_and = db_and();
			$db_and->condition('hoa.status', $status, '=');
			$db_and->condition('hoa.status', 'allotted', '!=');
			$query->condition($db_and);
		}*/
		else if($entity == 'vs_licence' && $status !=''){
			$db_and = db_and();
			$db_and->condition('hoa.status', $status, '=');
			$db_and->condition('hoa.status', 'allotted', '!=');
			$db_and->condition('hla.type_of_application', 'vs', '=');
			$query->condition($db_and);
		}
		else if($entity == 'cs_licence' && $status !=''){
			$db_and = db_and();
			$db_and->condition('hoa.status', $status, '=');
			$db_and->condition('hoa.status', 'allotted', '!=');
			$db_and->condition('hla.type_of_application', 'cs', '=');
			$query->condition($db_and);
		}
		//end
		
		/*if($entity == 'new-apply'){
			$query->orderBy('flat_type','ASC');
		}
		if($entity == 'new-apply' || $entity == 'vs' || $entity == 'cs' ){
			$query->orderBy('allotment_category','ASC');
		}*/
		//$query->condition('hft.flat_type', 'A', '=');
		//$query->orderBy('date_of_application','ASC');
		$query->orderBy('online_application_id','ASC');
		
		//echo $query;
		return $query->execute();
}

function fetch_all_application_detail1($entity = '',$status = ''){
		global $user, $user_role;
		
		$query = db_select('housing_applicant_official_detail', 'haod');
		$query->innerJoin('housing_applicant', 'ha',
		'ha.uid = haod.uid');
		$query->innerJoin('housing_online_application', 'hoa',
		'hoa.applicant_official_detail_id = haod.applicant_official_detail_id');
		$query->innerJoin('housing_ddo', 'hd',
		'hd.ddo_id = haod.ddo_id');
		$query->innerJoin('housing_pay_band', 'hpb',
		'hpb.pay_band_id = haod.pay_band_id');
		$query->leftJoin('file_managed', 'fm_app_form', 'fm_app_form.fid = hoa.uploaded_app_form');
		
		if($entity == 'new-apply'){
			$query->innerJoin('housing_new_allotment_application', 'hna',
			'hna.online_application_id = hoa.online_application_id');
			$query->innerJoin('housing_flat_type', 'hft',
			'hna.flat_type_id = hft.flat_type_id');
			
			$query->leftJoin('file_managed', 'fm',
			'fm.fid = hna.document');
			$query->leftJoin('file_managed', 'fm1',
			'fm1.fid = hna.extra_doc');
			$query->leftJoin('file_managed', 'fm2',
			'fm2.fid = hna.scaned_sign');
		}
		else if($entity == 'vs'){
			$query->innerJoin('housing_vs_application', 'hva',
			'hva.online_application_id = hoa.online_application_id');
			
			$query->leftJoin('file_managed', 'fm_vs',
			'fm_vs.fid = hva.file_licence');
		}
		else if($entity == 'cs'){
			$query->innerJoin('housing_cs_application', 'hca',
			'hca.online_application_id = hoa.online_application_id');
			
			$query->leftJoin('file_managed', 'fm_cs',
			'fm_cs.fid = hca.file_licence');
		}
		else if($entity == 'new_license' || $entity == 'renew_license'){
			$query->innerJoin('housing_license_application', 'hla',
			'hla.online_application_id = hoa.online_application_id');
			
			$query->leftJoin('file_managed', 'fm_licence',
			'fm_licence.fid = hla.document');
		}
		
		//new code
		else if($entity == 'vs_licence' || $entity == 'cs_licence'){
			$query->innerJoin('housing_license_application', 'hla',
			'hla.online_application_id = hoa.online_application_id');
			
			$query->leftJoin('file_managed', 'fm_licence',
			'fm_licence.fid = hla.document');
		}
		//
		
		if($entity == 'new-apply'){
			$query->addField('hft', 'flat_type_id');
		}
		$query->addField('ha', 'applicant_name');
		$query->addField('hoa', 'online_application_id');
		$query->addField('hd', 'district_code');
		$query->addField('hd', 'ddo_designation');
		$query->addField('hd', 'ddo_address');
		$query->addField('haod', 'applicant_designation');
		$query->addField('haod', 'applicant_headquarter');
		$query->addField('haod', 'applicant_posting_place');
		$query->addField('hpb', 'payband');
		$query->addField('hpb', 'scale_from');
		$query->addField('hpb', 'scale_to');
		$query->addField('haod', 'uid');
		$query->addField('haod', 'pay_in_the_pay_band');
		$query->addField('haod', 'grade_pay');
		$query->addField('haod', 'gpf_no');
		$query->addField('haod', 'date_of_joining');
		$query->addField('haod', 'date_of_retirement');
		$query->addField('haod', 'office_name');
		$query->addField('haod', 'office_street');
		$query->addField('haod', 'office_city_town_village');
		$query->addField('haod', 'office_post_office');
		$query->addField('haod', 'office_pin_code');
		$query->addField('haod', 'office_district');
		$query->addField('haod', 'office_phone_no');
		$query->addField('haod', 'hrms_id');
		$query->addField('hoa', 'status');
		$query->addField('hoa', 'application_no');
		$query->addField('hoa', 'date_of_application');
		$query->addField('hoa', 'date_of_verified');
		$query->addField('hoa', 'computer_serial_no');
		
		$query->addField('hoa', 'is_backlog_applicant');
		$query->addField('hoa', 'computer_serial_no');
		$query->addField('hoa', 'uploaded_app_form');
		$query->addField('fm_app_form', 'uri', 'uri_app_form');
		
		if($entity == 'new-apply'){
			$query->addField('hna', 'allotment_category');
			$query->addField('hft', 'flat_type');
			$query->addField('fm', 'uri', 'uri_doc');
			$query->addField('fm2', 'uri', 'uri_scaned_sign');
			$query->addField('fm1', 'uri', 'uri_extra_doc');
		}
		else if($entity == 'vs'){
			$query->addField('hva', 'allotment_category');
			$query->addField('fm_vs', 'uri', 'uri_vs');
		}
		else if($entity == 'cs'){
			$query->addField('hca', 'allotment_category');
			$query->addField('fm_cs', 'uri', 'uri_cs');
		}
		else if($entity == 'new_license' || $entity == 'vs_licence' || $entity == 'cs_licence' || $entity == 'renew_license'){
			$query->addField('fm_licence', 'uri', 'uri_licence');
		}
		
		if($entity != 'new_license' && $entity != 'renew_license' && $entity != 'vs_licence' && $entity != 'cs_licence' && 
		$status !=''){


			if($user_role == '11' && $status == 'applied')
			{
				$db_and = db_and();
				$db_and->condition('hoa.status', $status, '=');
				$db_and->condition('hoa.status', 'allotted', '!=');
				$query->condition($db_and);
			}

			
		}else if($entity == 'new_license' && $status !=''){
			$db_and = db_and();
			$db_and->condition('hoa.status', $status, '=');
			$db_and->condition('hoa.status', 'allotted', '!=');
			$db_and->condition('hla.type_of_application', 'new', '=');
			$query->condition($db_and);
		}else if($entity == 'renew_license' && $status !=''){
			$db_and = db_and();
			$db_and->condition('hoa.status', $status, '=');
			$db_and->condition('hoa.status', 'allotted', '!=');
			$db_and->condition('hla.type_of_application', 'renew', '=');
			$query->condition($db_and);
		}else if($entity == 'new-apply' && $status =='applied'){
			// added by moumita 21-05-2024
			$db_and = db_and();
			$db_and->condition('hoa.status', $status, '=');
			// $db_and->condition('hoa.status', 'allotted', '!=');
			// $db_and->condition('hla.type_of_application', 'renew', '=');
			$query->condition($db_and);

		}
		
		//new code
		/*if($entity != 'vs_licence' && $entity != 'cs_licence' && $status !=''){
			$db_and = db_and();
			$db_and->condition('hoa.status', $status, '=');
			$db_and->condition('hoa.status', 'allotted', '!=');
			$query->condition($db_and);
		}*/
		else if($entity == 'vs_licence' && $status !=''){
			$db_and = db_and();
			$db_and->condition('hoa.status', $status, '=');
			$db_and->condition('hoa.status', 'allotted', '!=');
			$db_and->condition('hla.type_of_application', 'vs', '=');
			$query->condition($db_and);
		}
		else if($entity == 'cs_licence' && $status !=''){
			$db_and = db_and();
			$db_and->condition('hoa.status', $status, '=');
			$db_and->condition('hoa.status', 'allotted', '!=');
			$db_and->condition('hla.type_of_application', 'cs', '=');
			$query->condition($db_and);
		}
		//end
		
		/*if($entity == 'new-apply'){
			$query->orderBy('flat_type','ASC');
		}
		if($entity == 'new-apply' || $entity == 'vs' || $entity == 'cs' ){
			$query->orderBy('allotment_category','ASC');
		}*/
		
		//$query->orderBy('date_of_application','ASC');
		//$query->orderBy('online_application_id','ASC');
		
		if($entity == 'new-apply'){
			$query->orderBy('to_number(hoa.computer_serial_no, text(9999999999))', 'ASC');
			$query->orderBy('hoa.computer_serial_no','ASC');
		}
		
		if($entity == 'vs' || $entity == 'cs' || $entity == 'new_license' || $entity == 'vs_licence' || $entity == 'cs_licence' || $entity == 'renew_license'){
			$query->orderBy('online_application_id','ASC');
		}
		
		//echo $query;die;
		//$query = $query->extend('PagerDefault')->limit(10);
		return $query->execute();
}
	
/*fetch applicant personal information*/
   function applicant_personal_info_detail($online_application_id = 0){
	    global $user;
	    $query = db_select('users', 'u');
		$query->innerJoin('housing_applicant', 'ha',
		'ha.uid = u.uid');
		$query->innerJoin('housing_applicant_official_detail', 'haod',
		'haod.uid = u.uid');
		$query->innerJoin('housing_online_application', 'hoa',
		'hoa.applicant_official_detail_id = haod.applicant_official_detail_id');
		$query->addField('u', 'mail');
		$query->fields('ha');
		/*$query->addField('ha', 'applicant_name');
		$query->addField('ha', 'guardian_name');
		$query->addField('ha', 'gender');
		$query->addField('ha', 'mobile_no');
		$query->addField('ha', 'date_of_birth');*/
		$query->condition('hoa.online_application_id', $online_application_id, '=');
		return $query->execute();
   }
/*URL Encryption*/
function encrypt_url($string) {
  $key = "MAL_979805"; //key to encrypt and decrypts.
  $result = '';
  $test = array();
   for($i=0; $i<strlen($string); $i++) {
     $char = substr($string, $i, 1);
     $keychar = substr($key, ($i % strlen($key))-1, 1);
     $char = chr(ord($char)+ord($keychar));

     $test[$char]= ord($char)+ord($keychar);
     $result.=$char;
   }

   return urlencode(base64_encode($result));
}
/*URL Decryption*/
function decrypt_url($string) {
    $key = "MAL_979805"; //key to encrypt and decrypts.
    $result = '';
    $string = base64_decode(urldecode($string));
   for($i=0; $i<strlen($string); $i++) {
     $char = substr($string, $i, 1);
     $keychar = substr($key, ($i % strlen($key))-1, 1);
     $char = chr(ord($char)-ord($keychar));
     $result.=$char;
   }
   return $result;
}

 function view_application_list_permission() {
  return array(
    'administer View Application List' => array(
      'title' => t('administer View Application List'),
      'description' => t('Perform administer View Application List.'),
    ),
	'administer View Application' => array(
      'title' => t('administer View Application'),
      'description' => t('Perform administer View Application.'),
    ),
	'administer View Application PDF' => array(
      'title' => t('administer View Application PDF'),
      'description' => t('Perform administer View Application PDF.'),
    ),
    'administer approve applicaion' => array(
      'title' => t('Administer Approve Applicaion'),
      'description' => t('Administer Approve Applicaion.'),
    ),
  );
}

function application_list_fetch($entity = '',$status = ''){
	global $user, $user_role;
		
		$query = db_select('housing_applicant_official_detail', 'haod');
		$query->innerJoin('housing_applicant', 'ha',
		'ha.uid = haod.uid');
		$query->innerJoin('housing_online_application', 'hoa',
		'hoa.applicant_official_detail_id = haod.applicant_official_detail_id');
		$query->innerJoin('housing_ddo', 'hd',
		'hd.ddo_id = haod.ddo_id');
		$query->innerJoin('housing_pay_band', 'hpb',
		'hpb.pay_band_id = haod.pay_band_id');
		$query->leftJoin('file_managed', 'fm_app_form', 'fm_app_form.fid = hoa.uploaded_app_form');
		
		if($entity == 'new-apply'){ 
			$query->innerJoin('housing_new_allotment_application', 'hna',
			'hna.online_application_id = hoa.online_application_id');
			$query->innerJoin('housing_flat_type', 'hft',
			'hna.flat_type_id = hft.flat_type_id');
			
			$query->leftJoin('file_managed', 'fm',
			'fm.fid = hna.document');
			$query->leftJoin('file_managed', 'fm1',
			'fm1.fid = hna.extra_doc');
			$query->leftJoin('file_managed', 'fm2',
			'fm2.fid = hna.scaned_sign');
		}
		else if($entity == 'vs'){
			$query->innerJoin('housing_vs_application', 'hva',
			'hva.online_application_id = hoa.online_application_id');
			
			$query->leftJoin('file_managed', 'fm_vs',
			'fm_vs.fid = hva.file_licence');
		}
		else if($entity == 'cs'){
			$query->innerJoin('housing_cs_application', 'hca',
			'hca.online_application_id = hoa.online_application_id');
			
			$query->leftJoin('file_managed', 'fm_cs',
			'fm_cs.fid = hca.file_licence');
		}
		else if($entity == 'new_license' || $entity == 'renew_license'){
			$query->innerJoin('housing_license_application', 'hla',
			'hla.online_application_id = hoa.online_application_id');
			
			$query->leftJoin('file_managed', 'fm_licence',
			'fm_licence.fid = hla.document');
		}
		
		//new code
		else if($entity == 'vs_licence' || $entity == 'cs_licence'){
			$query->innerJoin('housing_license_application', 'hla',
			'hla.online_application_id = hoa.online_application_id');
			
			$query->leftJoin('file_managed', 'fm_licence',
			'fm_licence.fid = hla.document');
		}
		//
		
		if($entity == 'new-apply'){
			$query->addField('hft', 'flat_type_id');
		}
		$query->addField('ha', 'applicant_name');
		$query->addField('hoa', 'online_application_id');
		$query->addField('hd', 'district_code');
		$query->addField('hd', 'ddo_designation');
		$query->addField('hd', 'ddo_address');
		$query->addField('haod', 'applicant_designation');
		$query->addField('haod', 'applicant_headquarter');
		$query->addField('haod', 'applicant_posting_place');
		$query->addField('hpb', 'payband');
		$query->addField('hpb', 'scale_from');
		$query->addField('hpb', 'scale_to');
		$query->addField('haod', 'uid');
		$query->addField('haod', 'pay_in_the_pay_band');
		$query->addField('haod', 'grade_pay');
		$query->addField('haod', 'gpf_no');
		$query->addField('haod', 'date_of_joining');
		$query->addField('haod', 'date_of_retirement');
		$query->addField('haod', 'office_name');
		$query->addField('haod', 'office_street');
		$query->addField('haod', 'office_city_town_village');
		$query->addField('haod', 'office_post_office');
		$query->addField('haod', 'office_pin_code');
		$query->addField('haod', 'office_district');
		$query->addField('haod', 'office_phone_no');
		$query->addField('haod', 'hrms_id');
		$query->addField('hoa', 'status');
		$query->addField('hoa', 'application_no');
		$query->addField('hoa', 'date_of_application');
		$query->addField('hoa', 'date_of_verified');//change in case of verified,rejected
		$query->addField('hoa', 'computer_serial_no');
		
		$query->addField('hoa', 'is_backlog_applicant');
		$query->addField('hoa', 'computer_serial_no');
		$query->addField('hoa', 'uploaded_app_form');
		$query->addField('fm_app_form', 'uri', 'uri_app_form');
		
		if($entity == 'new-apply'){
			$query->addField('hna', 'allotment_category');
			$query->addField('hft', 'flat_type');
			$query->addField('fm', 'uri', 'uri_doc');
			$query->addField('fm2', 'uri', 'uri_scaned_sign');
			$query->addField('fm1', 'uri', 'uri_extra_doc');
		}
		else if($entity == 'vs'){
			$query->addField('hva', 'allotment_category');
			$query->addField('fm_vs', 'uri', 'uri_vs');
		}
		else if($entity == 'cs'){
			$query->addField('hca', 'allotment_category');
			$query->addField('fm_cs', 'uri', 'uri_cs');
		}
		else if($entity == 'new_license' || $entity == 'vs_licence' || $entity == 'cs_licence' || $entity == 'renew_license'){
			$query->addField('fm_licence', 'uri', 'uri_licence');
		}

		$query->condition('hoa.status', $status, '=');
		
		
		if($entity == 'new-apply'){
			$query->orderBy('to_number(hoa.computer_serial_no, text(9999999999))', 'ASC');
			$query->orderBy('hoa.computer_serial_no','ASC');
		}
		
		if($entity == 'vs' || $entity == 'cs' || $entity == 'new_license' || $entity == 'vs_licence' || $entity == 'cs_licence' || $entity == 'renew_license'){
			$query->orderBy('online_application_id','ASC');
		}
		
	
		//$query = $query->extend('PagerDefault')->limit(10);
		return $query->execute();

}

function application_list_fetch_for_verified_reject($entity = '',$status = ''){
	global $user, $user_role;

		// $query = db_select('housing_process_flow', 'hpf');
		// $query->addField('hpf', 'status_id');
		// $query->addField('hpf', 'short_code');
		// $query->addField('hpf','created_at');
		// $query->addField('hpf','online_application_id');
		// $query->condition('hpf.uid',$user->uid,'=');
		// $result_1 = $query->execute();  
		// $data_1 = $result_1->fetchAssoc();

		//print_r($data_1);die;
		
		$query = db_select('housing_applicant_official_detail', 'haod');
		$query->innerJoin('housing_applicant', 'ha',
		'ha.uid = haod.uid');
		$query->innerJoin('housing_online_application', 'hoa',
		'hoa.applicant_official_detail_id = haod.applicant_official_detail_id');
		$query->innerJoin('housing_ddo', 'hd',
		'hd.ddo_id = haod.ddo_id');
		$query->innerJoin('housing_pay_band', 'hpb',
		'hpb.pay_band_id = haod.pay_band_id');
		$query->leftJoin('file_managed', 'fm_app_form', 'fm_app_form.fid = hoa.uploaded_app_form');
		$query->innerJoin('housing_process_flow', 'hpf','hpf.online_application_id = hoa.online_application_id');
		$query->innerJoin('housing_allotment_status_master', 'hsm','hsm.status_id = hpf.status_id');
		//$query->leftJoin('housing_process_flow', 'hpf', );
		
		if($entity == 'new-apply'){ 
			$query->innerJoin('housing_new_allotment_application', 'hna',
			'hna.online_application_id = hoa.online_application_id');
			$query->innerJoin('housing_flat_type', 'hft',
			'hna.flat_type_id = hft.flat_type_id');
			
			$query->leftJoin('file_managed', 'fm',
			'fm.fid = hna.document');
			$query->leftJoin('file_managed', 'fm1',
			'fm1.fid = hna.extra_doc');
			$query->leftJoin('file_managed', 'fm2',
			'fm2.fid = hna.scaned_sign');
		}
		else if($entity == 'vs'){
			$query->innerJoin('housing_vs_application', 'hva',
			'hva.online_application_id = hoa.online_application_id');
			
			$query->leftJoin('file_managed', 'fm_vs',
			'fm_vs.fid = hva.file_licence');
		}
		else if($entity == 'cs'){
			$query->innerJoin('housing_cs_application', 'hca',
			'hca.online_application_id = hoa.online_application_id');
			
			$query->leftJoin('file_managed', 'fm_cs',
			'fm_cs.fid = hca.file_licence');
		}
		else if($entity == 'new_license' || $entity == 'renew_license'){
			$query->innerJoin('housing_license_application', 'hla',
			'hla.online_application_id = hoa.online_application_id');
			
			$query->leftJoin('file_managed', 'fm_licence',
			'fm_licence.fid = hla.document');
		}
		
		//new code
		else if($entity == 'vs_licence' || $entity == 'cs_licence'){
			$query->innerJoin('housing_license_application', 'hla',
			'hla.online_application_id = hoa.online_application_id');
			
			$query->leftJoin('file_managed', 'fm_licence',
			'fm_licence.fid = hla.document');
		}
		//
		
		if($entity == 'new-apply'){
			$query->addField('hft', 'flat_type_id');
		}
		$query->addField('ha', 'applicant_name');
		$query->addField('hoa', 'online_application_id');
		$query->addField('hd', 'district_code');
		$query->addField('hd', 'ddo_designation');
		$query->addField('hd', 'ddo_address');
		$query->addField('haod', 'applicant_designation');
		$query->addField('haod', 'applicant_headquarter');
		$query->addField('haod', 'applicant_posting_place');
		$query->addField('hpb', 'payband');
		$query->addField('hpb', 'scale_from');
		$query->addField('hpb', 'scale_to');
		$query->addField('haod', 'uid');
		$query->addField('haod', 'pay_in_the_pay_band');
		$query->addField('haod', 'grade_pay');
		$query->addField('haod', 'gpf_no');
		$query->addField('haod', 'date_of_joining');
		$query->addField('haod', 'date_of_retirement');
		$query->addField('haod', 'office_name');
		$query->addField('haod', 'office_street');
		$query->addField('haod', 'office_city_town_village');
		$query->addField('haod', 'office_post_office');
		$query->addField('haod', 'office_pin_code');
		$query->addField('haod', 'office_district');
		$query->addField('haod', 'office_phone_no');
		$query->addField('haod', 'hrms_id');
		$query->addField('hoa', 'status');
		$query->addField('hoa', 'application_no');
		$query->addField('hoa', 'date_of_application');
		$query->addField('hoa', 'date_of_verified');//change in case of verified,rejected
		$query->addField('hoa', 'computer_serial_no');
		
		$query->addField('hoa', 'is_backlog_applicant');
		$query->addField('hoa', 'computer_serial_no');
		$query->addField('hoa', 'uploaded_app_form');
		$query->addField('fm_app_form', 'uri', 'uri_app_form');
		
		if($entity == 'new-apply'){
			$query->addField('hna', 'allotment_category');
			$query->addField('hft', 'flat_type');
			$query->addField('fm', 'uri', 'uri_doc');
			$query->addField('fm2', 'uri', 'uri_scaned_sign');
			$query->addField('fm1', 'uri', 'uri_extra_doc');


			$query->addField('hpf', 'status_id');
			$query->addField('hpf', 'short_code');
			$query->addField('hpf','created_at');
			$query->addField('hpf','online_application_id');
			$query->addField('hsm','status_description');
		}
		else if($entity == 'vs'){
			$query->addField('hva', 'allotment_category');
			$query->addField('fm_vs', 'uri', 'uri_vs');
		}
		else if($entity == 'cs'){
			$query->addField('hca', 'allotment_category');
			$query->addField('fm_cs', 'uri', 'uri_cs');
		}
		else if($entity == 'new_license' || $entity == 'vs_licence' || $entity == 'cs_licence' || $entity == 'renew_license'){
			$query->addField('fm_licence', 'uri', 'uri_licence');
		}

		
		$query->condition('hpf.uid', $user->uid, '=');
		$query->condition('hpf.short_code', $status, '=');

		
		
		if($entity == 'new-apply'){
			$query->orderBy('to_number(hoa.computer_serial_no, text(9999999999))', 'ASC');
			$query->orderBy('hoa.computer_serial_no','ASC');
		}
		
		if($entity == 'vs' || $entity == 'cs' || $entity == 'new_license' || $entity == 'vs_licence' || $entity == 'cs_licence' || $entity == 'renew_license'){
			$query->orderBy('online_application_id','ASC');
		}
		
	
		//$query = $query->extend('PagerDefault')->limit(10);
		return $query->execute();

}

function fetch_application_detail_verified_reject_list($online_application_id = 0){

	
		global $user;
		$query = db_select('housing_applicant_official_detail', 'haod');
		$query->innerJoin('housing_online_application', 'hoa',
		'hoa.applicant_official_detail_id = haod.applicant_official_detail_id');
		$query->innerJoin('housing_ddo', 'hd',
		'hd.ddo_id = haod.ddo_id');
		$query->innerJoin('housing_district', 'hds',
		'hds.district_code = hd.district_code');
		$query->innerJoin('housing_pay_band_categories', 'hpb',
		'hpb.pay_band_id = haod.pay_band_id');
		$query->leftJoin('housing_new_allotment_application', 'hna',
		'hna.online_application_id = hoa.online_application_id');
		$query->leftJoin('file_managed', 'fm_app_form', 'fm_app_form.fid = hoa.uploaded_app_form');
		$query->leftJoin('file_managed', 'fm',
		'fm.fid = hna.document');
		$query->leftJoin('file_managed', 'fm1',
		'fm1.fid = hna.extra_doc');
		$query->leftJoin('file_managed', 'fm2',
		'fm2.fid = hna.scaned_sign');
		$query->leftJoin('housing_flat_type', 'hft',
		'hpb.flat_type_id = hft.flat_type_id');
		/* $query->leftJoin('housing_flat_type', 'hft',
		'hna.flat_type_id = hft.flat_type_id'); */
		$query->leftJoin('housing_vs_application', 'hva',
			'hva.online_application_id = hoa.online_application_id');
		$query->leftJoin('file_managed', 'fm_vs',
		'fm_vs.fid = hva.file_licence');
		$query->leftJoin('housing_cs_application', 'hca',
			'hca.online_application_id = hoa.online_application_id');
		$query->leftJoin('file_managed', 'fm_cs',
		'fm_cs.fid = hca.file_licence');
		$query->leftJoin('housing_license_application', 'hla',
			'hla.online_application_id = hoa.online_application_id');
		$query->leftJoin('file_managed', 'fm_licence',
		'fm_licence.fid = hla.document');
		

		$query->innerJoin('housing_process_flow', 'hpf','hpf.online_application_id = hoa.online_application_id');
		$query->innerJoin('housing_allotment_status_master', 'hsm','hsm.status_id = hpf.status_id');
		

		$query->addField('hft', 'flat_type_id');
		$query->addField('hft', 'flat_type');
		$query->addField('hoa', 'online_application_id');
		$query->addField('hoa', 'application_no');
		$query->addField('hd', 'district_code');
		$query->addField('hd', 'ddo_designation');
		$query->addField('hd', 'ddo_address');
		$query->addField('hds', 'district_name');
		$query->addField('haod', 'applicant_designation');
		$query->addField('haod', 'applicant_headquarter');
		$query->addField('haod', 'applicant_posting_place');
		//$query->addField('hpb', 'payband');
		$query->addField('hpb', 'scale_from');
		$query->addField('hpb', 'scale_to');
		$query->addField('haod', 'uid');
		$query->addField('haod', 'pay_in_the_pay_band');
		$query->addField('haod', 'grade_pay');
		$query->addField('haod', 'gpf_no');
		$query->addField('haod', 'date_of_joining');
		$query->addField('haod', 'date_of_retirement');
		$query->addField('haod', 'office_name');
		$query->addField('haod', 'office_street');
		$query->addField('haod', 'office_city_town_village');
		$query->addField('haod', 'office_post_office');
		$query->addField('haod', 'office_pin_code');
		$query->addField('haod', 'office_district');
		$query->addField('haod', 'office_phone_no');
		$query->addField('haod', 'hrms_id');
		$query->addField('hoa', 'status');
		$query->addField('hoa', 'date_of_application');
		$query->addField('hoa', 'date_of_verified');
		$query->addField('hoa', 'uploaded_app_form');
		$query->addField('fm_app_form', 'uri', 'uri_app_form');
		$query->addField('fm', 'uri', 'uri_doc');
		$query->addField('fm2', 'uri', 'uri_scaned_sign');
		$query->addField('fm1', 'uri', 'uri_extra_doc');
		$query->addField('fm_vs', 'uri', 'uri_vs');
		$query->addField('fm_cs', 'uri', 'uri_cs');
		$query->addField('fm_licence', 'uri', 'uri_licence');



		$query->addField('hpf','created_at');
		$query->addField('hsm','status_description');
		$query->condition('hpf.uid', $user->uid, '=');
		$query->condition('hoa.online_application_id', $online_application_id, '=');


		$query->orderBy('hoa.online_application_id', 'ASC');
		/*if($online_application_id == 0){
			$query->condition('haod.uid', $user->uid, '=');
		}
		else{
			$query->condition('hoa.online_application_id', $online_application_id, '=');
		}*/
		//echo $user->uid;$query; die();
		return $query->execute();
	}

function fetch_application_status_description($status_shortcode=''){
	$query = db_select('housing_allotment_status_master', 'hasm');
	$query->condition('hasm.short_code', $status_shortcode, '=');
	$query->addField('hasm', 'status_description');
	$result = $query->execute();  
	$result = $result->fetchObject();
		
	return $result->status_description; 

}

